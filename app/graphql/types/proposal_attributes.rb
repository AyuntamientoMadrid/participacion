module Types
  class ProposalAttributes < Types::BaseInputObject
    class ProposalTranslationAttributes < Types::BaseInputObject
      argument :title, String, required: true, validates: { allow_blank: false }
      argument :description, String, required: true, validates: { allow_blank: false }
      argument :summary, String, required: true, validates: {
        length: { maximum: 200 },
        allow_blank: false
      }
    end
    argument :translations_attributes, [ProposalTranslationAttributes], required: true

    class FileUploadAttributes < Types::BaseInputObject
      argument :title, String, required: true
      # The path here is generated by DirectUpload Class
      # actual file uploading happens via HTTP multipart in DirectUploadsController
      argument :cached_attachment, String, required: true
    end
    argument :documents_attributes, [FileUploadAttributes], required: false
    argument :image_attributes, FileUploadAttributes, required: false


    class MapLocationAttributes < Types::BaseInputObject
      argument :latitude, Float, required: true
      argument :longitude, Float, required: true
      argument :zoom, Integer, required: true
    end
    argument :map_location_attributes, MapLocationAttributes, required: false

    argument :geozone_id, ID, required: false
    argument :tag_list, String, required: false
    argument :terms_of_service, Boolean, required: true
    argument :video_url, String, required: false
  end
end
