#!/usr/bin/env bash

YARN_VERSION=1.19.1
BUNDLER_VERSION="~>2.1.0"

cd "$(dirname "$0")/.." || exit 1
DIR=$(pwd)

for P in "$DIR"/script/dev-setup.d/*; do
  source "$P"
done

set -e

function on-exit() {
  status=$?
  if [ $status -ne 0 ]; then
    echo
    error "Setup wasn't successful"
    error "Please check the logs above, follow any instructions and run $0 again"
    exit $status
  fi
}
trap "on-exit" EXIT

info "Install dev dependencies"

info "Installing ruby (if necessary)"
add-asdf-plugin ruby https://github.com/asdf-vm/asdf-ruby.git
install-asdf-plugins

info "Installing bundler (if necessary)"
gem install bundler --conservative --version "$BUNDLER_VERSION"

info "Installing yarn (if necessary)"
if ! yarn -v > /dev/null 2>&1; then
  install-package yarn
fi

if [ "$(yarn --version)" != "$YARN_VERSION" ]; then
  error "Please use yarn version $YARN_VERSION or update the version requirement"
  error "in 'script/dev-setup', '.circleci/config.yml' and 'package.json'."
  error "You can upgrade yarn on macOS with 'brew upgrade yarn'."
  exit 1
fi

info "Installing postgres (if necessary)"
if ! cmd psql; then
  brew-install postgresql
fi

info "Install gems (if necessary)"
bundle install

info "Copying database.yml.example to database.yml (if necessary)"
if [ ! -f "config/database.yml" ]; then
  cp config/database.yml.example config/database.yml
  warn "You're going to want to edit config/database.yml for your particular setup"
fi

info "Copying secrets.yml.example to secrets.yml (if necessary)"
if [ ! -f "config/secrets.yml" ]; then
  cp config/secrets.yml.example config/secrets.yml
  warn "You're going to want to edit config/secrets.yml for your particular setup"
fi

info "Creating the database (if necessary)"
bin/rake db:create

info "Migrating the database (if necessary)"
bin/rake db:migrate

info "Adding seeds to the database (if necessary)"
bin/rake db:dev_seed

info "Setting up the database for test (if necessary)"
RAILS_ENV=test rake db:setup

echo -e "${GREEN}>> You're all set up!${DEFAULT}"
